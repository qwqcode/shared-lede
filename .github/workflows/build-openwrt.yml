#
# Copyright (C) 2022 hugcabbage <fengsongtianxia@gmail.com>
#
# This is free software, licensed under the MIT License.
#
# <https://github.com/hugcabbage/shared-lede>
#
# 源码采用openwrt openwrt-22.03分支
#
name: 固件编译 openwrt 22.03

on:
  workflow_dispatch:
    inputs:
      build:
        description: '若要编译固件，请输入true'
        required: true
        default: 'true'
        type: string
      lan_ipad:
        description: '设置LAN口IP地址(会覆盖modify脚本中的设置)'
        required: false
        default: ''
        type: string
      switch_tag:
        description: '切换到最近稳定版本'
        required: false
        type: boolean

jobs:
  build:
    name: 固件编译
    if: inputs.build == 'true'
    runs-on: ubuntu-latest
    env:
      TEMP_PREFIX: 1
      DEPLOYDIR: preset-openwrt
    steps:

      - name: 初始空间情况
        run: |
          df -h

      - name: Checkout
        uses: actions/checkout@v3

      - name: 环境准备
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc-multilib gettext libncurses5-dev
          sudo apt-get clean

      - name: 下载源码与插件
        env:
          CLONE_SH: ${{ env.DEPLOYDIR }}/${{ env.TEMP_PREFIX }}.clone.sh
        run: |
          ${{ inputs.switch_tag }} && \
            sed -i '/SWITCH_TAG_FLAG=/ s/false/true/' $CLONE_SH
          chmod +x $CLONE_SH
          $CLONE_SH

      - name: 升级feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 修改配置
        env:
          MODIFY_SH: ${{ env.DEPLOYDIR }}/${{ env.TEMP_PREFIX }}.modify.sh
        run: |
          chmod +x $MODIFY_SH
          $MODIFY_SH
          ${{ inputs.lan_ipad != '' }} && \
            sed -i "/lan) ipad=/clan) ipad=\${ipaddr:-\"${{ inputs.lan_ipad }}\"} ;;" \
              package/base-files/files/bin/config_generate
          :

      - name: 生成.config文件
        env:
          DOT_CONFIG: ${{ env.DEPLOYDIR }}/${{ env.TEMP_PREFIX }}.config
        run: |
          mv $DOT_CONFIG .config
          make defconfig

      - name: 下载编译资源
        run: |
          make download -j8 || make download -j1 V=s

      - name: 编译
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: 整理固件目录
        run: |
          mkdir -p collected_firmware/packages
          rm -rf $(find bin/targets/ -type d -name 'packages')
          cp $(find bin/targets/ -type f) collected_firmware
          cp $(find bin/packages/ -type f -name '*.ipk') collected_firmware/packages
          cd collected_firmware
          zip -r allfiles.zip *
          cd packages
          zip -r ../packages.zip *

      - name: 上传固件到artifact
        uses: actions/upload-artifact@v3
        with:
          name: collected_firmware
          path: |
            collected_firmware/
            !collected_firmware/*.zip

      - name: 空间使用情况
        run: |
          df -h
          echo "----------------------------"
          du -h --max-depth=1
